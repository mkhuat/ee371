module TopLevelSerialCommSystem(
	/* Inputs */ clk, serial_in,
	/* Outputs: */ led_clk, serial_out);
	
	/*
	Inputs
		reset: sets all scanners to a low power state
		startSystem: transitions first scanner from low power to standby
		startScan: transitions first scanner from standby to scanning
		startTransfer: transitions an idle scanner to transferring
	*/
	input clk, serial_in;
	output wire serial_out, led_clk;

	parameter 
		
		// Clock index
		CLOCK_INDEX = 24,

		// Encoding of states
		
		
		// BIC states
		START_BIC = 4'b0000,

		
		// BSC States
		START_BSC = 4'b0000,
		MIDDLE_BSC = 4'b0111,
		END_BSC = 4'b1111;


	// Divide and display the 50MHz clock
	reg [30:0] scan_clk;
	always@(posedge clk) scan_clk <= scan_clk + 1'b1
	assign clk_led = scan_clk[CLOCK_INDEX];;

	// State and counters

	
	// Modules
	
endmodule


module BSC();

endmodule

module BIC();

endmodule



module StartBitDetect();

endmodule

module TransmitEnable();

endmodule

// TODO: Add Shift Registers and Clock Control